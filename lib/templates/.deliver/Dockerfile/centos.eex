FROM centos:<%= tag %>

# autogenerated by deli

ENV OTP_VERSION="<%= versions[:otp][:version] %>" \
    ELIXIR_VERSION="<%= versions[:elixir][:version] %>" \
    REBAR3_VERSION="<%= versions[:rebar3][:version] %>" \
    OTP_SUM="<%= versions[:otp][:checksum] %>" \
    ELIXIR_SUM="<%= versions[:elixir][:checksum] %>" \
    REBAR3_SUM="<%= versions[:rebar3][:checksum] %>"


# Base dependencies
RUN set -xe \
  && yum update -y \
  && yum clean all \
  && yum reinstall -y glibc-common \
  && localedef -i en_US -f UTF-8 en_US.UTF-8 \
  && yum -y groupinstall "Development Tools" \
  && yum -y install ncurses \
      ncurses-devel \
      unixODBC \
      unixODBC-devel \
      openssl-devel \
      openssh-clients \
      openssh-server \
  && echo "NETWORKING=yes" > /etc/sysconfig/network \
  && ln -sf /usr/share/zoneinfo/UTC /etc/localtime

# Configure SSH for non-root public key authentication
RUN set -xe \
  && mkdir -p /var/run/sshd \
  && sed -i \
         -e 's~^PasswordAuthentication yes~PasswordAuthentication no~g' \
         -e 's~^#PermitRootLogin yes~PermitRootLogin no~g' \
         -e 's~^#UseDNS yes~UseDNS no~g' \
         -e 's~^Host~#Host~g' \
         -e 's~^ForwardX11Trusted~#ForwardX11Trusted~g' \
         -e 's~^SendEnv~#SendEnv~g' \
         -e 's~^\(.*\)/usr/libexec/openssh/sftp-server$~\1internal-sftp~g' \
        /etc/ssh/sshd_config

# Erlang/OTP
RUN set -xe \
  && OTP_SRC_URL="https://github.com/erlang/otp/archive/OTP-${OTP_VERSION}.tar.gz" \
  && curl -fSL "$OTP_SRC_URL" -o otp-src.tar.gz \
  && echo "${OTP_SUM}  otp-src.tar.gz" | sha256sum -c - \
  && mkdir -p /usr/local/src/otp \
  && tar -zxf otp-src.tar.gz -C /usr/local/src/otp --strip-components=1 \
  && rm otp-src.tar.gz \
  && cd /usr/local/src/otp \
  && ./otp_build autoconf \
  && ./configure --disable-hipe --without-javac --without-odbc --without-diameter --without-megaco --without-eldap --without-debugger --without-wx --without-et --without-observer \
  && make \
  && make install \
  && find /usr/local -name examples | xargs rm -rf \
  && cd /usr/local \
  && rm -rf /usr/local/src/otp \
  && cd /usr/local/src \
  && git clone --branch ${REBAR3_VERSION} https://github.com/rebar/rebar3.git \
  && cd rebar3 \
  && ./bootstrap \
  && cp rebar3 /usr/bin/rebar3 \
  && cd / && rm -rf /usr/src/rebar3

# Elixir
RUN set -xe \
  && ELIXIR_DOWNLOAD_URL="https://github.com/elixir-lang/elixir/archive/v${ELIXIR_VERSION}.tar.gz" \
  && curl -fSL -o elixir-src.tar.gz $ELIXIR_DOWNLOAD_URL \
  && echo "${ELIXIR_SUM}  elixir-src.tar.gz" | sha256sum -c - \
  && mkdir -p /usr/local/src/elixir \
  && tar -xzC /usr/local/src/elixir --strip-components=1 -f elixir-src.tar.gz \
  && rm elixir-src.tar.gz \
  && cd /usr/local/src/elixir \
  && make install clean \
  && cd /usr/local \
  && rm -rf /usr/local/src/elixir \
  && mix local.hex --force \
  && mix hex.info

<%= if yarn? do %>
# Yarn
RUN set -xe \
  && yum -y install cairo-devel \
  && curl --silent --location https://rpm.nodesource.com/setup_9.x | bash \
  && yum -y install nodejs \
  && npm -g up \
  && curl -sL https://dl.yarnpkg.com/rpm/yarn.repo -o /etc/yum.repos.d/yarn.repo \
  && yum -y install yarn
<% end %>
COPY authorized_keys /authorized_keys
RUN ssh-keygen -q -t rsa -f /etc/ssh/ssh_host_rsa_key -C '' -N ''
RUN ssh-keygen -q -t dsa -f /etc/ssh/ssh_host_dsa_key -C '' -N ''

# Create deli user and make it a sudoer
RUN set -xe \
  && useradd -s /bin/bash -c "deli" deli \
  && mkhomedir_helper deli \
  && mkdir -p /home/deli/.ssh \
  && cp /authorized_keys/<%= app %>_id_rsa.pub /home/deli/.ssh/authorized_keys \
  && chown -R deli:deli /home/deli/.ssh \
  && mkdir -p /etc/sudoers.d \
  && touch /etc/sudoers.d/deli \
  && echo "deli ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/deli

WORKDIR /usr/local/builds

RUN git init
RUN git config receive.denyCurrentBranch ignore
RUN chown -R deli:deli /usr/local/builds

RUN echo "export LANG=en_US.UTF-8" >> /home/deli/.profile

EXPOSE 22

CMD ["/usr/sbin/sshd", "-D"]
